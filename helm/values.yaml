image:
  repository: ghcr.io/codespace-operator/codespace-operator
  tag: "0.1.0"
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

replicaCount: 1

rbac:
  create: true

serviceAccount:
  create: true
  name: ""

metrics:
  name: ""
  enabled: true
  secure: true
  bindAddress: :8443
  service:
    type: ClusterIP
    annotations: {}
    port: 8443
    targetPort: 8443
  serviceMonitor:
    enabled: false
    namespace: ""
    interval: 30s
    scrapeTimeout: 10s
    labels: {}

webhook:
  enabled: false
  certPath: ""
  certName: tls.crt
  certKey: tls.key

enableHTTP2: false

resources:
  limits: {}
  requests:
    cpu: 100m
    memory: 128Mi

nodeSelector: {}
tolerations: []
affinity: {}

extraArgs: []

podAnnotations: {}
podLabels: {}

securityContext: {}
containerSecurityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true

ingressClass:
  enabled: false
  name: "codespace-operator"
  controller: "k8s.io/ingress-controller/codespace-operator"

server:
  # for openshift
  route:
    enabled: false
    annotations: {}
    tls:
      termination: edge

  enabled: true
  image:
    repository: ghcr.io/codespace-operator/codespace-server
    tag: "0.1.0"
    pullPolicy: IfNotPresent
  env:
    allowOrigin: ""        # set to http://localhost:5173 for local dev; empty = same-origin
  service:
    type: ClusterIP
    annotations: {}
    name: ""
    port: 8080
  probes:
    readinessPath: /readyz
    livenessPath: /healthz
  ingress:
    enabled: false
    className: ""
    annotations: {}
    hosts:
      - host: console.codespace.test
        path: /
    tls: []
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 500m
      memory: 256Mi
  securityContext:
    runAsUser: 1001
    runAsNonRoot: true
    fsGroup: 2000
    seccompProfile:
      type: RuntimeDefault
  containerSecurityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    capabilities:
      drop: ["ALL"]
  nodeSelector: {}
  tolerations: []
  affinity: {}
  useManagerServiceAccount: false  # prefer separate SA (least privilege)
  serviceAccount:
    create: true
    name: ""               # default: <release>-codespace-operator-server
  rbac:
    create: true           # create namespaced Role/RoleBinding for sessions
  networkPolicy:
    enabled: true
    allowIngressFromSameNamespace: true
    egressToKubeAPIServer: true
