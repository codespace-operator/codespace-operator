{{- if .Values.server.enabled }}
{{- $secName := printf "%s-auth" (include "codespace-operator.server.name" .) -}}
{{- $existing := lookup "v1" "Secret" .Release.Namespace $secName -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secName }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "codespace-operator.labels" . | indent 4 }}
type: Opaque
data:
  {{- /* read previous values if secret exists */}}
  {{- $prevJWT := "" -}}
  {{- $prevUser := "" -}}
  {{- $prevPass := "" -}}
  {{- if $existing }}
    {{- if hasKey $existing.data "jwt-secret" }}{{- $prevJWT = (index $existing.data "jwt-secret" | b64dec) -}}{{- end }}
    {{- if hasKey $existing.data "bootstrap-user" }}{{- $prevUser = (index $existing.data "bootstrap-user" | b64dec) -}}{{- end }}
    {{- if hasKey $existing.data "bootstrap-password" }}{{- $prevPass = (index $existing.data "bootstrap-password" | b64dec) -}}{{- end }}
  {{- end }}
  jwt-secret: {{ ( .Values.server.auth.jwtSecret | default $prevJWT | default (randAlphaNum 48) ) | b64enc }}
  bootstrap-user: {{ ( .Values.server.auth.bootstrapUser | default $prevUser | default "admin" ) | b64enc }}
  bootstrap-password: {{ ( .Values.server.auth.bootstrapPassword | default $prevPass | default (randAlphaNum 20) ) | b64enc }}
{{- end }}
